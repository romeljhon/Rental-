'use server';

/**
 * @fileOverview Generates a compelling rental listing description using AI based on user-provided keywords and details.
 *
 * - generateListingDescription - A function that generates the listing description.
 * - GenerateListingDescriptionInput - The input type for the generateListingDescription function.
 * - GenerateListingDescriptionOutput - The return type for the generateListingDescription function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateListingDescriptionInputSchema = z.object({
  keywords: z
    .string()
    .describe('Keywords describing the rental item, separated by commas.'),
  details: z.string().describe('Specific details about the rental item.'),
});
export type GenerateListingDescriptionInput = z.infer<
  typeof GenerateListingDescriptionInputSchema
>;

const GenerateListingDescriptionOutputSchema = z.object({
  description: z
    .string()
    .describe('A compelling rental listing description generated by AI.'),
});
export type GenerateListingDescriptionOutput = z.infer<
  typeof GenerateListingDescriptionOutputSchema
>;

export async function generateListingDescription(
  input: GenerateListingDescriptionInput
): Promise<GenerateListingDescriptionOutput> {
  return generateListingDescriptionFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateListingDescriptionPrompt',
  input: {schema: GenerateListingDescriptionInputSchema},
  output: {schema: GenerateListingDescriptionOutputSchema},
  prompt: `You are an expert copywriter specializing in creating compelling rental listing descriptions.

  Based on the following keywords and details, generate an engaging and informative description for a rental listing.

  Keywords: {{{keywords}}}
  Details: {{{details}}}

  Description:`,
});

const generateListingDescriptionFlow = ai.defineFlow(
  {
    name: 'generateListingDescriptionFlow',
    inputSchema: GenerateListingDescriptionInputSchema,
    outputSchema: GenerateListingDescriptionOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
